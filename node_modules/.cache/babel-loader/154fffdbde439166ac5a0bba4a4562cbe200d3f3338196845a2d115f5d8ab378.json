{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useFileUpload.js\nimport { useState, useRef } from 'react';\nimport { FILE_TYPES, MAX_FILE_SIZE } from '../constants/config';\nexport const useFileUpload = () => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const fileInputRef = useRef(null);\n  const handleDragOver = e => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    setIsDragging(false);\n    const files = Array.from(e.dataTransfer.files);\n    handleFiles(files);\n  };\n  const handleFiles = files => {\n    const file = files[0];\n    if (!file) return;\n\n    // 파일 타입 체크\n    const isValidType = Object.values(FILE_TYPES).some(type => file.name.toLowerCase().endsWith(type));\n    if (!isValidType) {\n      alert('지원하지 않는 파일 형식입니다. (docx, pdf 파일만 가능)');\n      return;\n    }\n\n    // 파일 크기 체크\n    if (file.size > MAX_FILE_SIZE) {\n      alert('파일 크기가 너무 큽니다. (최대 5MB)');\n      return;\n    }\n\n    // TODO: 파일 처리 로직 추가\n    console.log('File processed:', file);\n  };\n  const handleFileChange = e => {\n    const files = Array.from(e.target.files);\n    handleFiles(files);\n  };\n  return {\n    isDragging,\n    fileInputRef,\n    handleDragOver,\n    handleDragLeave,\n    handleDrop,\n    handleFileChange\n  };\n};\n_s(useFileUpload, \"ICSTOYkc0inD8Xn4CialJ2zzBsY=\");","map":{"version":3,"names":["useState","useRef","FILE_TYPES","MAX_FILE_SIZE","useFileUpload","_s","isDragging","setIsDragging","fileInputRef","handleDragOver","e","preventDefault","handleDragLeave","handleDrop","files","Array","from","dataTransfer","handleFiles","file","isValidType","Object","values","some","type","name","toLowerCase","endsWith","alert","size","console","log","handleFileChange","target"],"sources":["C:/Users/wonta/Desktop/project-aco/aco-project/frontend/src/hooks/useFileUpload.js"],"sourcesContent":["// src/hooks/useFileUpload.js\r\nimport { useState, useRef } from 'react';\r\nimport { FILE_TYPES, MAX_FILE_SIZE } from '../constants/config';\r\n\r\nexport const useFileUpload = () => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n    const files = Array.from(e.dataTransfer.files);\r\n    handleFiles(files);\r\n  };\r\n\r\n  const handleFiles = (files) => {\r\n    const file = files[0];\r\n    if (!file) return;\r\n\r\n    // 파일 타입 체크\r\n    const isValidType = Object.values(FILE_TYPES).some(type => \r\n      file.name.toLowerCase().endsWith(type)\r\n    );\r\n\r\n    if (!isValidType) {\r\n      alert('지원하지 않는 파일 형식입니다. (docx, pdf 파일만 가능)');\r\n      return;\r\n    }\r\n\r\n    // 파일 크기 체크\r\n    if (file.size > MAX_FILE_SIZE) {\r\n      alert('파일 크기가 너무 큽니다. (최대 5MB)');\r\n      return;\r\n    }\r\n\r\n    // TODO: 파일 처리 로직 추가\r\n    console.log('File processed:', file);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    handleFiles(files);\r\n  };\r\n\r\n  return {\r\n    isDragging,\r\n    fileInputRef,\r\n    handleDragOver,\r\n    handleDragLeave,\r\n    handleDrop,\r\n    handleFileChange\r\n  };\r\n};"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,SAASC,UAAU,EAAEC,aAAa,QAAQ,qBAAqB;AAE/D,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMQ,YAAY,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMQ,cAAc,GAAIC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMK,eAAe,GAAIF,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMM,UAAU,GAAIH,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,aAAa,CAAC,KAAK,CAAC;IACpB,MAAMO,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACN,CAAC,CAACO,YAAY,CAACH,KAAK,CAAC;IAC9CI,WAAW,CAACJ,KAAK,CAAC;EACpB,CAAC;EAED,MAAMI,WAAW,GAAIJ,KAAK,IAAK;IAC7B,MAAMK,IAAI,GAAGL,KAAK,CAAC,CAAC,CAAC;IACrB,IAAI,CAACK,IAAI,EAAE;;IAEX;IACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACpB,UAAU,CAAC,CAACqB,IAAI,CAACC,IAAI,IACrDL,IAAI,CAACM,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACH,IAAI,CACvC,CAAC;IAED,IAAI,CAACJ,WAAW,EAAE;MAChBQ,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACF;;IAEA;IACA,IAAIT,IAAI,CAACU,IAAI,GAAG1B,aAAa,EAAE;MAC7ByB,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;;IAEA;IACAE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEZ,IAAI,CAAC;EACtC,CAAC;EAED,MAAMa,gBAAgB,GAAItB,CAAC,IAAK;IAC9B,MAAMI,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACN,CAAC,CAACuB,MAAM,CAACnB,KAAK,CAAC;IACxCI,WAAW,CAACJ,KAAK,CAAC;EACpB,CAAC;EAED,OAAO;IACLR,UAAU;IACVE,YAAY;IACZC,cAAc;IACdG,eAAe;IACfC,UAAU;IACVmB;EACF,CAAC;AACH,CAAC;AAAC3B,EAAA,CA1DWD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}